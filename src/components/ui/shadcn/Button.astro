---
// Adaptado de shadcn/ui Button para Astro
import { cn } from "../../../lib/utils";

export interface Props {
  variant?: "default" | "destructive" | "outline" | "secondary" | "ghost" | "link" | "primary";
  size?: "default" | "sm" | "lg" | "icon";
  class?: string;
  asChild?: boolean;
  href?: string;
  type?: "button" | "submit" | "reset";
  [key: string]: any; // Para pasar cualquier otro atributo HTML
}

const {
  variant = "default",
  size = "default",
  class: className = "",
  asChild = false,
  href,
  type = "button",
  ...props
} = Astro.props;

// Mapeo de variantes a clases de Tailwind según shadcn/ui
const variantClassMap = {
  default: "bg-primary text-primary-foreground hover:bg-primary/90",
  destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
  outline: "border border-input hover:bg-accent hover:text-accent-foreground",
  secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
  ghost: "hover:bg-accent hover:text-accent-foreground",
  link: "underline-offset-4 hover:underline text-primary",
  primary: "bg-kenda-red text-white hover:bg-red-700", // Custom variant
};

// Mapeo de tamaños a clases de Tailwind según shadcn/ui
const sizeClassMap = {
  default: "h-10 py-2 px-4",
  sm: "h-9 px-3 rounded-md",
  lg: "h-11 px-8 rounded-md",
  icon: "h-10 w-10",
};

// Clases base comunes
const baseClass = "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background";

// Combinar todas las clases
const buttonClass = cn(
  baseClass,
  variantClassMap[variant],
  sizeClassMap[size],
  className
);
---

{
  href ? (
    <a href={href} class={buttonClass} {...props}>
      <slot />
    </a>
  ) : (
    <button type={type} class={buttonClass} {...props}>
      <slot />
    </button>
  )
}