---
// Solo importamos el componente Image de Astro
import { Image } from 'astro:assets';

// Interfaces TypeScript 
interface HeroProps {
  title?: string;
  subtitle?: string;
}

// Props con valores por defecto
const { 
  title = "¿Te interesa ser Distribuidor KENDA?",
  subtitle = "Déjanos tu correo para agendar una llamada" 
} = Astro.props as HeroProps;

// División del título en dos partes
const titleParts = title.split("Distribuidor");
const firstPart = titleParts[0];
const secondPart = titleParts.length > 1 ? "Distribuidor" + titleParts[1] : "";
---

<section id="hero" class="h-screen w-full relative overflow-hidden">
  <!-- Estructura de fondo -->
  <div class="absolute inset-0 z-0">
    <!-- Fondo izquierdo con estadio y cuadrícula blanca -->
    <div class="absolute inset-0 w-full h-full">
      <!-- Imagen de fondo del estadio con filtro - usando rutas estándar -->
      <div class="absolute inset-0 w-full h-full filter-img">
        <img src="/images/hero/gradas-background.png" alt="" class="w-full h-full object-cover" />
      </div>
      
      <!-- Overlay de cuadrícula blanca sobre el estadio - cuadros grandes -->
      <div class="absolute inset-0 w-full h-full grid-background"></div>
      
      <!-- Degradado al final de la sección -->
      <div class="absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-gray-200 to-transparent"></div>
    </div>
    
    <!-- Mapa de México (rojo) - extendido y movido a la izquierda - SOLO VISIBLE EN DESKTOP -->
    <div class="absolute top-0 right-0 w-3/5 h-full overflow-hidden translate-x-10 hidden md:block">
      <!-- Mapa de México - más grande y extendido -->
      <div class="absolute inset-0 scale-125 origin-right">
        <img src="/images/hero/mexico-map.png" alt="" class="h-full w-full object-cover" />
      </div>
      
      <!-- Distribuidor (persona) a la derecha -->
      <div class="absolute inset-0 flex items-center justify-center">
        <img src="/images/hero/distribuidor.webp" alt="" class="h-full object-contain" />
      </div>
    </div>
  </div>
  
  <!-- Logo KENDA en la posición del círculo rojo (superior izquierda) -->
  <div class="absolute top-4 md:top-8 left-4 md:left-8 z-20">
    <img src="/images/kenda-logo.png" alt="KENDA" class="h-16 md:h-24 lg:h-28" />
  </div>
  
  
  <!-- Contenido principal -->
  <div class="relative z-10 h-full w-full">
    <!-- Contenido lado izquierdo - adaptable para móvil -->
    <div class="absolute inset-0 w-full md:w-2/5 flex flex-col justify-center p-4 md:p-8 lg:p-16">
      <!-- Contenedor para contenido - adaptado para móvil -->
      <div class="flex flex-col mt-4 md:mt-8">
        <!-- Título con separación de líneas exacta - tamaño reducido en móvil -->
        <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl xl:text-8xl font-black text-black leading-tight tracking-tight">
          <span class="block mb-2">{firstPart}</span>
          <span class="block">{secondPart}</span>
        </h1>
        
        <!-- Subtítulo - tamaño reducido en móvil -->
        <p class="text-xl sm:text-2xl md:text-3xl text-black my-4 md:my-8 font-light">
          {subtitle}
        </p>
        
        <!-- Tarjeta de formulario estilizada - ancho completo en móvil -->
        <div class="bg-white rounded-2xl p-4 md:p-6 shadow-lg w-full max-w-md">
          <form id="hero-form">
            <div>
              <label for="email" class="block text-base font-medium text-gray-700 mb-3 md:mb-4">Empezar registro:</label>
              <div class="relative">
                <!-- Input con extremo circular en la derecha -->
                <input
                  type="email"
                  id="email"
                  name="email"
                    class="w-full py-3 px-6 pr-16 bg-gray-200 border-2 border-transparent rounded-full focus:ring-2 focus:ring-[#F7941D] focus:border-transparent shadow-sm"
                  placeholder="Escribe tu correo electrónico"
                  required
                />
                <!-- Botón posicionado dentro del input -->
                <button
                  type="submit"
                  id="submit-button"
                  aria-label="Enviar formulario"
                  class="absolute right-0 top-0 bottom-0 bg-[#F7941D] text-white rounded-full flex items-center justify-center transition-all duration-300 w-12 h-12 my-auto mr-1"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5" id="button-icon">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
                  </svg>
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5 hidden" id="button-success-icon">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                  </svg>
                </button>
              </div>
              <div id="email-error" class="hidden text-red-500 text-sm mt-1">
                Por favor ingresa un correo electrónico válido
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Decoración: Imagen de neumático en la esquina inferior izquierda - más pequeña en móvil -->
  <img 
    src="/images/tire_1.webp" 
    alt="" 
    class="absolute bottom-0 left-0 w-20 h-24 sm:w-32 sm:h-32 md:w-30 md:h-100 object-contain opacity-80 z-10 floating-tire"
    id="floating-tire"
  />
</section>

<!-- Script con validación de email simplificada y sin animación JS redundante para el neumático -->
<script>
  // Seleccionamos los elementos una vez
  const form = document.getElementById('hero-form') as HTMLFormElement;
  const submitButton = document.getElementById('submit-button') as HTMLButtonElement;
  const buttonIcon = document.getElementById('button-icon') as HTMLElement;
  const buttonSuccessIcon = document.getElementById('button-success-icon') as HTMLElement;
  const emailInput = document.getElementById('email') as HTMLInputElement;
  const emailError = document.getElementById('email-error') as HTMLDivElement;
  
  // Función para validar email - versión simplificada y más eficiente
  function isValidEmail(email: string) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email.toLowerCase());
  }
  
  // Validación en tiempo real
  if (emailInput) {
    emailInput.addEventListener('input', () => {
      if (emailInput.value.length > 0) {
        if (isValidEmail(emailInput.value)) {
          emailInput.classList.remove('border-red-500');
          emailInput.classList.add('border-green-500');
          if (emailError) emailError.classList.add('hidden');
        } else {
          emailInput.classList.remove('border-green-500');
          emailInput.classList.add('border-red-500');
        }
      } else {
        emailInput.classList.remove('border-red-500', 'border-green-500');
        if (emailError) emailError.classList.add('hidden');
      }
    });
  }
  
  if (form && submitButton) {
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      
      // Validar email antes de enviar
      const email = emailInput.value;
      
      if (!isValidEmail(email)) {
        if (emailError) emailError.classList.remove('hidden');
        emailInput.classList.add('border-red-500');
        return;
      }
      
      // Deshabilitar el botón durante el envío
      submitButton.setAttribute('disabled', 'true');
      
      // Iniciar animación de envío
      submitButton.classList.add('animate-pulse');
      
      // Prepara los datos para enviar a Make
      const formData = {
        email: email,
        source: 'hero-form',
        timestamp: new Date().toISOString()
      };
      
      console.log('Enviando datos:', formData);
      
      // Simular envío (en un caso real, aquí iría la llamada a la API de Make)
      setTimeout(() => {
        // Detener animación de pulso
        submitButton.classList.remove('animate-pulse');
        
        // Mostrar confirmación con animación
        submitButton.classList.remove('bg-[#F7941D]');
        submitButton.classList.add('bg-green-600');
        
        // Hacer girar el botón
        submitButton.classList.add('animate-spin-once');
        
        // Cambiar el icono
        buttonIcon.classList.add('hidden');
        buttonSuccessIcon.classList.remove('hidden');
        
        // Reiniciar el formulario después de un tiempo
        setTimeout(() => {
          form.reset();
          submitButton.removeAttribute('disabled');
          submitButton.classList.remove('bg-green-600', 'animate-spin-once');
          submitButton.classList.add('bg-[#F7941D]');
          buttonSuccessIcon.classList.add('hidden');
          buttonIcon.classList.remove('hidden');
          emailInput.classList.remove('border-red-500', 'border-green-500');
        }, 3000);
      }, 1000);
    });
  }
</script>

<style>
  /* Filtro para la imagen de las gradas - como en la imagen de referencia */
  .filter-img {
    filter: brightness(0.9) contrast(0.9);
  }
  
  .filter-img::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(245, 245, 245, 0.7); /* Filtro claro sobre la imagen */
  }
  
  /* Cuadrícula con cuadros MUCHO más grandes */
  .grid-background {
    background-image: 
      linear-gradient(rgba(255, 255, 255, 0.3) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, 0.3) 1px, transparent 1px);
    background-size: 80px 80px; /* Cuadros más grandes */
    background-position: center;
  }
  
  /* Estilos para el neumático flotante - solo con CSS */
  .floating-tire {
    animation: float 6s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }
  
  /* Animación de un solo giro para el botón */
  @keyframes spin-once {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .animate-spin-once {
    animation: spin-once 0.5s ease-in-out forwards;
  }
</style>